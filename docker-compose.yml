version: "3.7"

services:
  database:
    image: postgres:12.2-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_USER=mydbuser
      - POSTGRES_PASSWORD=mydbpassword
      - POSTGRES_DB=mydbname
    healthcheck:
      test: pg_isready -U postgres
      interval: 5s
      retries: 10
      timeout: 5s
    ports:
      - "5432:5432"
    volumes:
      - .:/data/db

  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: node:14.16.1-alpine
    command: ./bin/wait-for.sh database:5432 -- npm start
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - API_HOST=api
      - API_PORT=5000
      - CRYPTO_SALT=insecure-do-not-use-in-production
      - POSTGRES_HOST=database
      - POSTGRES_PORT=5432
      - POSTGRES_USER=mydbuser
      - POSTGRES_PASSWORD=mydbpassword
      - POSTGRES_DATABASE=mydbname
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:5000/ping || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    ports:
      - "5000:5000"
    volumes:
      - .:/home/node/app
      - node_modules:/home/node/app/node_modules

  pgweb:
    image: sosedoff/pgweb
    restart: always
    environment:
      - DATABASE_URL=postgres://mydbuser:mydbpassword@database:5432/mydbname?sslmode=disable
    ports:
      - "5001:8081"
    links:
      - database:database

volumes:
  node_modules:
